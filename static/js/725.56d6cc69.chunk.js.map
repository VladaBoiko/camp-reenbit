{"version":3,"file":"static/js/725.56d6cc69.chunk.js","mappings":"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","sources":["pages/CardDetails/CardDetails.styled.js","pages/CardDetails/CardDetails.jsx","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { BiLeftArrowAlt } from \"react-icons/bi\";\nexport const Header = styled.header``;\nexport const HeaderContainer = styled.div`\n  max-width: 1440px;\n  padding: 21px 50px;\n  margin: 0 auto;\n`;\nexport const GoBackLink = styled(NavLink)`\n  font-family: \"Karla\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.17;\n  color: #000000;\n  text-decoration: none;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n`;\nexport const Icon = styled(BiLeftArrowAlt)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\nexport const Image = styled.img`\n  border-radius: 50%;\n  border: 5px solid #f2f2f7;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 60%;\n\n  @media screen and (min-width: 540px) {\n    width: 305px;\n  }\n`;\nexport const Box = styled.div`\n  padding-top: 56px;\n  width: 100%;\n  max-width: 550px;\n  padding: 56px 24px 85px 24px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1050px) {\n    padding-top: 0;\n    width: 443px;\n    padding: 10px 15px 142px 15px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 32px;\n  line-height: 1.17;\n\n  text-align: center;\n  color: #081f32;\n  margin-bottom: 48px;\n  text-align: center;\n  @media screen and (min-width: 1050px) {\n    font-size: 48px;\n  }\n`;\nexport const Wrapper = styled.div``;\nexport const AddTitle = styled.h2`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  font-size: 20px;\n  letter-spacing: 0.15px;\n  color: #8e8e93;\n  margin-bottom: 17px;\n  @media screen and (min-width: 1050px) {\n    text-align: center;\n    margin-bottom: 48px;\n  }\n`;\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Item = styled.li`\n  padding-bottom: 12px;\n  padding-top: 9px;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.08);\n  display: flex;\n  flex-direction: column;\n`;\nexport const SpanTitle = styled.span`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  color: #081f32;\n`;\nexport const SpanText = styled.span`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.43;\n\n  letter-spacing: 0.25px;\n\n  color: #6e798c;\n`;\n","import { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCharacterById } from \"../../redux/selectors\";\nimport { fetchCharacterById } from \"../../redux/operations\";\nimport {\n  Box,\n  Wrapper,\n  Title,\n  AddTitle,\n  GoBackLink,\n  Header,\n  HeaderContainer,\n  Icon,\n  Image,\n  List,\n  Item,\n  SpanTitle,\n  SpanText,\n} from \"./CardDetails.styled\";\nexport default function CardDetail() {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n  const dispatch = useDispatch();\n  const { item } = useSelector(getCharacterById);\n  useEffect(() => {\n    if (id === \"\") {\n      return;\n    }\n    dispatch(fetchCharacterById(id));\n  }, [dispatch, id]);\n  let imgPath = null;\n  if (!item.image) {\n    imgPath =\n      \"https://www.shutterstock.com/image-vector/no-image-available-vector-hand-260nw-745639717.jpg\";\n  }\n  if (item.image) {\n    imgPath = `${item.image}`;\n  }\n  const img = `${imgPath}`;\n  return (\n    <>\n      <Header>\n        <HeaderContainer>\n          <GoBackLink to={backLinkHref}>\n            <Icon />\n            Go back\n          </GoBackLink>\n        </HeaderContainer>\n      </Header>\n\n      <Box>\n        <Image src={img} alt={item.name} />\n        <Title>{item.name}</Title>\n        <Wrapper>\n          <AddTitle>Informations</AddTitle>\n          <List>\n            {item.gender && (\n              <Item>\n                <SpanTitle>Gender</SpanTitle>\n                <SpanText>{item.gender}</SpanText>\n              </Item>\n            )}\n            {item.status && (\n              <Item>\n                <SpanTitle>Status</SpanTitle>\n                <SpanText>{item.status}</SpanText>\n              </Item>\n            )}\n            {item.species && (\n              <Item>\n                <SpanTitle>Specie</SpanTitle>\n                <SpanText>{item.species}</SpanText>\n              </Item>\n            )}\n            {item.origin && (\n              <Item>\n                <SpanTitle>Origin</SpanTitle>\n                <SpanText>{item.origin.name}</SpanText>\n              </Item>\n            )}\n            {item.type && (\n              <Item>\n                <SpanTitle>Type</SpanTitle>\n                <SpanText>{item.type}</SpanText>\n              </Item>\n            )}\n          </List>\n        </Wrapper>\n      </Box>\n\n      <Outlet />\n    </>\n  );\n}\n\n// gender: \"Male\"\n// image: \"https://rickandmortyapi.com/api/character/avatar/7.jpeg\"\n// name: \"Abradolf Lincler\"\n// origin: Object { name: \"Earth (Replacement Dimension)\", url: \"https://rickandmortyapi.com/api/location/20\" }\n// species: \"Human\"\n// status: \"unknown\"\n// type: \"Genetic experiment\"\n","export const getCharacters = (state) => state.characters;\nexport const getFilter = (state) => state.filter;\nexport const getPage = (state) => state.page;\nexport const getCharacterById = (state) => state.characterById;\n"],"names":["Header","styled","_templateObject","_taggedTemplateLiteral","HeaderContainer","_templateObject2","GoBackLink","NavLink","_templateObject3","Icon","BiLeftArrowAlt","_templateObject4","Image","_templateObject5","Box","_templateObject6","Title","_templateObject7","Wrapper","_templateObject8","AddTitle","_templateObject9","List","_templateObject10","Item","_templateObject11","SpanTitle","_templateObject12","SpanText","_templateObject13","CardDetail","_location$state$from","_location$state","id","useParams","backLinkHref","useLocation","state","from","dispatch","useDispatch","item","useSelector","getCharacterById","useEffect","fetchCharacterById","imgPath","image","concat","img","_jsxs","_Fragment","children","_jsx","to","src","alt","name","gender","status","species","origin","type","Outlet","getCharacters","characters","getFilter","filter","getPage","page","characterById"],"sourceRoot":""}