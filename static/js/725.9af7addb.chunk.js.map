{"version":3,"file":"static/js/725.9af7addb.chunk.js","mappings":"2SAGaA,EAASC,EAAAA,GAAAA,OAAH,sBACNC,EAAkBD,EAAAA,GAAAA,IAAH,wFAKfE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4PAYVI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,+EAKJM,EAAQN,EAAAA,GAAAA,IAAH,qOAYLO,EAAMP,EAAAA,GAAAA,IAAH,qQAcHQ,EAAQR,EAAAA,GAAAA,GAAH,ySAeLS,EAAUT,EAAAA,GAAAA,IAAH,sBACPU,EAAWV,EAAAA,GAAAA,GAAH,oUAeRW,EAAOX,EAAAA,GAAAA,GAAH,6CAGJY,EAAOZ,EAAAA,GAAAA,GAAH,uKAOJa,EAAYb,EAAAA,GAAAA,KAAH,qLASTc,EAAWd,EAAAA,GAAAA,KAAH,0L,SClFN,SAASe,IAAc,IAAD,IAC3BC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,QAAQC,IAAIH,GACZ,IACMI,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACvCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACG,KAAPV,GAGJQ,GAASG,EAAAA,EAAAA,IAAmBX,GAC7B,GAAE,CAACQ,EAAUR,IACd,IAAQY,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAArBF,KACJG,EAAU,KACTH,EAAKI,QACRD,EACE,gGAEAH,EAAKI,QACPD,EAAO,UAAMH,EAAKI,QAEpB,IAAMC,EAAG,UAAMF,GACf,OACE,iCACE,SAAChC,EAAD,WACE,SAACE,EAAD,WACE,UAACC,EAAD,CAAYgC,GAAId,EAAhB,WACE,SAAChB,EAAD,IADF,kBAOJ,UAACG,EAAD,YACE,SAACD,EAAD,CAAO6B,IAAKF,EAAKG,IAAKR,EAAKS,QAC3B,SAAC7B,EAAD,UAAQoB,EAAKS,QACb,UAAC5B,EAAD,YACE,SAACC,EAAD,4BACA,UAACC,EAAD,WACGiB,EAAKU,SACJ,UAAC1B,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWc,EAAKU,YAGnBV,EAAKW,SACJ,UAAC3B,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWc,EAAKW,YAGnBX,EAAKY,UACJ,UAAC5B,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWc,EAAKY,aAGnBZ,EAAKa,SACJ,UAAC7B,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWc,EAAKa,OAAOJ,UAG1BT,EAAKc,OACJ,UAAC9B,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,UAAWc,EAAKc,oBAO1B,SAAC,KAAD,MAGL,C,gICjGM,IAAMC,EAAgB,SAACrB,GAAD,OAAWA,EAAMsB,UAAjB,EAChBC,EAAY,SAACvB,GAAD,OAAWA,EAAMwB,MAAjB,EACZC,EAAU,SAACzB,GAAD,OAAWA,EAAM0B,IAAjB,EACVlB,EAAmB,SAACR,GAAD,OAAWA,EAAM2B,aAAjB,C","sources":["pages/CardDetails/CardDetails.styled.js","pages/CardDetails/CardDetails.jsx","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { BiLeftArrowAlt } from \"react-icons/bi\";\nexport const Header = styled.header``;\nexport const HeaderContainer = styled.div`\n  max-width: 1440px;\n  padding: 21px 50px;\n  margin: 0 auto;\n`;\nexport const GoBackLink = styled(NavLink)`\n  font-family: \"Karla\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.17;\n  color: #000000;\n  text-decoration: none;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n`;\nexport const Icon = styled(BiLeftArrowAlt)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\nexport const Image = styled.img`\n  border-radius: 50%;\n  border: 5px solid #f2f2f7;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 60%;\n\n  @media screen and (min-width: 540px) {\n    width: 305px;\n  }\n`;\nexport const Box = styled.div`\n  padding-top: 56px;\n  width: 100%;\n  max-width: 550px;\n  padding: 56px 24px 85px 24px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1050px) {\n    padding-top: 0;\n    width: 443px;\n    padding: 10px 15px 142px 15px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 32px;\n  line-height: 1.17;\n\n  text-align: center;\n  color: #081f32;\n  margin-bottom: 48px;\n  text-align: center;\n  @media screen and (min-width: 1050px) {\n    font-size: 48px;\n  }\n`;\nexport const Wrapper = styled.div``;\nexport const AddTitle = styled.h2`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  font-size: 20px;\n  letter-spacing: 0.15px;\n  color: #8e8e93;\n  margin-bottom: 17px;\n  @media screen and (min-width: 1050px) {\n    text-align: center;\n    margin-bottom: 48px;\n  }\n`;\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Item = styled.li`\n  padding-bottom: 12px;\n  padding-top: 9px;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.08);\n  display: flex;\n  flex-direction: column;\n`;\nexport const SpanTitle = styled.span`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  color: #081f32;\n`;\nexport const SpanText = styled.span`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.43;\n\n  letter-spacing: 0.25px;\n\n  color: #6e798c;\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCharacterById } from '../../redux/selectors';\nimport { fetchCharacterById } from '../../redux/operations';\nimport {\n  Box,\n  Wrapper,\n  Title,\n  AddTitle,\n  GoBackLink,\n  Header,\n  HeaderContainer,\n  Icon,\n  Image,\n  List,\n  Item,\n  SpanTitle,\n  SpanText,\n} from './CardDetails.styled';\nexport default function CardDetail() {\n  const { id } = useParams();\n  console.log(id);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id === '') {\n      return;\n    }\n    dispatch(fetchCharacterById(id));\n  }, [dispatch, id]);\n  const { item } = useSelector(getCharacterById);\n  let imgPath = null;\n  if (!item.image) {\n    imgPath =\n      'https://www.shutterstock.com/image-vector/no-image-available-vector-hand-260nw-745639717.jpg';\n  }\n  if (item.image) {\n    imgPath = `${item.image}`;\n  }\n  const img = `${imgPath}`;\n  return (\n    <>\n      <Header>\n        <HeaderContainer>\n          <GoBackLink to={backLinkHref}>\n            <Icon />\n            Go back\n          </GoBackLink>\n        </HeaderContainer>\n      </Header>\n\n      <Box>\n        <Image src={img} alt={item.name} />\n        <Title>{item.name}</Title>\n        <Wrapper>\n          <AddTitle>Informations</AddTitle>\n          <List>\n            {item.gender && (\n              <Item>\n                <SpanTitle>Gender</SpanTitle>\n                <SpanText>{item.gender}</SpanText>\n              </Item>\n            )}\n            {item.status && (\n              <Item>\n                <SpanTitle>Status</SpanTitle>\n                <SpanText>{item.status}</SpanText>\n              </Item>\n            )}\n            {item.species && (\n              <Item>\n                <SpanTitle>Specie</SpanTitle>\n                <SpanText>{item.species}</SpanText>\n              </Item>\n            )}\n            {item.origin && (\n              <Item>\n                <SpanTitle>Origin</SpanTitle>\n                <SpanText>{item.origin.name}</SpanText>\n              </Item>\n            )}\n            {item.type && (\n              <Item>\n                <SpanTitle>Type</SpanTitle>\n                <SpanText>{item.type}</SpanText>\n              </Item>\n            )}\n          </List>\n        </Wrapper>\n      </Box>\n\n      <Outlet />\n    </>\n  );\n}\n\n// gender: \"Male\"\n// image: \"https://rickandmortyapi.com/api/character/avatar/7.jpeg\"\n// name: \"Abradolf Lincler\"\n// origin: Object { name: \"Earth (Replacement Dimension)\", url: \"https://rickandmortyapi.com/api/location/20\" }\n// species: \"Human\"\n// status: \"unknown\"\n// type: \"Genetic experiment\"\n","export const getCharacters = (state) => state.characters;\nexport const getFilter = (state) => state.filter;\nexport const getPage = (state) => state.page;\nexport const getCharacterById = (state) => state.characterById;\n"],"names":["Header","styled","HeaderContainer","GoBackLink","NavLink","Icon","BiLeftArrowAlt","Image","Box","Title","Wrapper","AddTitle","List","Item","SpanTitle","SpanText","CardDetail","id","useParams","console","log","backLinkHref","useLocation","state","from","dispatch","useDispatch","useEffect","fetchCharacterById","item","useSelector","getCharacterById","imgPath","image","img","to","src","alt","name","gender","status","species","origin","type","getCharacters","characters","getFilter","filter","getPage","page","characterById"],"sourceRoot":""}