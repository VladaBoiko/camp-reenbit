{"version":3,"file":"static/js/391.3c5c1e9d.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Title/Title.styled.js","components/Title/Title.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/CardList/CardList.styled.js","components/CharacterCard/CharacterCard.styled.js","components/CharacterCard/CharacterCard.jsx","components/CardList/CardList.jsx","pages/MainPage/MainPage.styled.js","components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.jsx","pages/MainPage/MainPage.jsx","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const Container = styled.div`\n  width: 100%;\n  padding: 92px 20px;\n  margin: 0 auto;\n  @media screen and (min-width: 1050px) {\n    width: 1050px;\n    padding: 0 15px;\n    margin: 0 auto;\n  }\n`;\n","import styled from \"styled-components\";\nexport const TitleImage = styled.img`\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto 32px auto;\n  @media screen and (min-width: 1050px) {\n    margin-bottom: 16px;\n  }\n`;\n","import { TitleImage } from \"./Title.styled\";\nconst titleImg = require(\"../../images/title.png\");\n\nexport const Title = () => {\n  return (\n    <>\n      <TitleImage src={titleImg} alt=\"Rick and Morty\" />\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\nimport { FaArrowCircleRight } from \"react-icons/fa\";\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n  color: rgba(46, 107, 3, 0.8);\n  &:hover {\n    color: rgb(46, 107, 3);\n    cursor: pointer;\n  }\n`;\nexport const PagBox = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 50px;\n`;\nexport const LeftArrow = styled(FaArrowCircleLeft)`\n  width: 50px;\n  height: 50px;\n`;\nexport const RightArrow = styled(FaArrowCircleRight)`\n  width: 50px;\n  height: 50px;\n`;\n","import { Button, PagBox, LeftArrow, RightArrow } from \"./Pagination.styled\";\nexport const NextPage = ({ loadFunction }) => {\n  return (\n    <Button type=\"button\" onClick={loadFunction}>\n      <RightArrow />\n    </Button>\n  );\n};\nexport const PreviousPage = ({ loadFunction }) => {\n  return (\n    <Button type=\"button\" onClick={loadFunction}>\n      <LeftArrow />\n    </Button>\n  );\n};\nexport const PaginationBox = ({ children }) => {\n  return <PagBox>{children}</PagBox>;\n};\n","import styled from \"styled-components\";\nexport const CharactersList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  gap: 32px;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 50px;\n  @media screen and (min-width: 540px) {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    gap: 20px;\n  }\n`;\nexport const BadResult = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 50px;\n  text-align: center;\n\n  @media screen and (min-width: 1050px) {\n    font-size: 60px;\n    margin-bottom: 30px;\n  }\n`;\nexport const BadImage = styled.img`\n  position: absolute;\n  opacity: 50%;\n`;\nexport const BadWrapper = styled.div`\n  position: relative;\n`;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nexport const Navigation = styled(NavLink)`\n  text-decoration: none;\n`;\nexport const CharacterItem = styled.li`\n  width: 100%;\n  @media screen and (max-width: 540px) {\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 540px) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n  @media screen and (min-width: 800px) {\n    flex-basis: calc((100% - 40px) / 3);\n  }\n  @media screen and (min-width: 1050px) {\n    flex-basis: calc((100% - 60px) / 4);\n  }\n  max-width: 390px;\n  background: #ffffff;\n  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12),\n    0px 2px 4px rgba(0, 0, 0, 0.14);\n  border-radius: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\nexport const Image = styled.img`\n  border-radius: 4px 4px 0 0;\n  max-height: 232px;\n  object-fit: cover;\n`;\nexport const CardBox = styled.div`\n  padding: 12px 16px;\n`;\nexport const CardTitle = styled.h2`\n  font-family: \"Roboto\";\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-bottom: 1px;\n`;\nexport const CardText = styled.p`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n","import {\n  CharacterItem,\n  Image,\n  CardBox,\n  CardTitle,\n  CardText,\n  Navigation,\n} from \"./CharacterCard.styled\";\nexport const CharacterCard = ({ character }) => {\n  return (\n    <CharacterItem>\n      <Navigation to={`${character.id}`} state={{ from: \"/\" }}>\n        <Image src={character.image} alt={character.name} />\n        <CardBox>\n          <CardTitle>{character.name}</CardTitle>\n          <CardText>{character.species}</CardText>\n        </CardBox>\n      </Navigation>\n    </CharacterItem>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { NextPage, PreviousPage } from \"../Pagination/Pagination\";\nimport { getCharacters, getFilter, getPage } from \"../../redux/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchCharacters, fetchCharactersByName } from \"../../redux/operations\";\nimport { nextPage, prevPage } from \"../../redux/charactersSlice\";\nimport {\n  CharactersList,\n  BadResult,\n  BadImage,\n  BadWrapper,\n} from \"./CardList.styled\";\nimport { CharacterCard } from \"../CharacterCard/CharacterCard\";\nimport { PaginationBox } from \"../Pagination/Pagination\";\nconst badImg = require(\"../../images/ready.png\");\nexport const CardList = () => {\n  const page = useSelector(getPage);\n  const nextPageFunc = () => {\n    dispatch(nextPage());\n  };\n  const prevPageFunc = () => {\n    dispatch(prevPage());\n  };\n  const dispatch = useDispatch();\n  const { items, error, maxPage } = useSelector(getCharacters);\n\n  const query = useSelector(getFilter);\n  const sortedCharacters = [...items].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  useEffect(() => {\n    if (query.filter === \"\") {\n      dispatch(fetchCharacters(page.page));\n    }\n    if (query.filter !== \"\") {\n      dispatch(fetchCharactersByName(query.filter));\n    }\n  }, [dispatch, page, query.filter]);\n  return (\n    <>\n      {error && (\n        <BadWrapper>\n          <BadResult>No matches</BadResult>\n          <BadImage src={badImg} alt=\"no matches\" />\n        </BadWrapper>\n      )}\n      {!error && (\n        <>\n          <CharactersList>\n            {sortedCharacters.map((character) => {\n              return <CharacterCard character={character} key={character.id} />;\n            })}\n          </CharactersList>\n\n          {maxPage !== 1 && (\n            <PaginationBox>\n              {page.page !== 1 && query.filter === \"\" && (\n                <PreviousPage loadFunction={prevPageFunc} />\n              )}\n              {page.page < maxPage.pages && query.filter === \"\" && (\n                <NextPage loadFunction={nextPageFunc} />\n              )}\n            </PaginationBox>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const MainTitle = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import styled from \"styled-components\";\nimport { ImSearch } from \"react-icons/im\";\n\nexport const Form = styled.form`\n  width: 100%;\n  margin-bottom: 32px;\n  @media screen and (min-width: 1050px) {\n    margin-bottom: 61px;\n  }\n`;\nexport const Input = styled.input`\n  width: 100%;\n  padding: 16px 48px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  /* width: 100%; */\n  height: 100%;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px;\n`;\nexport const Box = styled.div`\n  position: relative;\n`;\nexport const Icon = styled(ImSearch)`\n  width: 17px;\n  height: 17px;\n  color: rgba(0, 0, 0, 0.54); ;\n`;\n","import { Form, Input, Button, Box, Icon } from \"./FilterForm.styled\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { addFilter } from \"../../redux/charactersSlice\";\n\nexport const SearchForm = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = (e) => {\n    dispatch(addFilter(e.currentTarget.value));\n  };\n  const formSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Form onSubmit={formSubmit}>\n      <Box>\n        <Input\n          type=\"text\"\n          value={filter.filter}\n          name=\"query\"\n          placeholder=\"Filter by name...\"\n          onChange={changeFilter}\n        />\n        <Button type=\"submit\">\n          <Icon />\n        </Button>\n      </Box>\n    </Form>\n  );\n};\n","import { Container } from \"../../components/Container/Container.styled\";\nimport { Title } from \"../../components/Title/Title\";\nimport { CardList } from \"../../components/CardList/CardList\";\nimport { MainTitle } from \"./MainPage.styled\";\nimport { SearchForm } from \"../../components/FilterForm/FilterForm\";\nexport default function MainPage() {\n  return (\n    <Container>\n      <MainTitle>Rick and Morty</MainTitle>\n      <Title />\n      <SearchForm />\n      <CardList />\n    </Container>\n  );\n}\n","export const getCharacters = (state) => state.characters;\nexport const getFilter = (state) => state.filter;\nexport const getPage = (state) => state.page;\nexport const getCharacterById = (state) => state.characterById;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","TitleImage","titleImg","require","Title","_jsx","_Fragment","children","src","alt","Button","PagBox","_templateObject2","LeftArrow","FaArrowCircleLeft","_templateObject3","RightArrow","FaArrowCircleRight","_templateObject4","NextPage","_ref","loadFunction","type","onClick","PreviousPage","_ref2","PaginationBox","_ref3","CharactersList","BadResult","BadImage","BadWrapper","Navigation","NavLink","CharacterItem","Image","CardBox","CardTitle","_templateObject5","CardText","_templateObject6","CharacterCard","character","_jsxs","to","concat","id","state","from","image","name","species","badImg","CardList","page","useSelector","getPage","dispatch","useDispatch","_useSelector","getCharacters","items","error","maxPage","query","getFilter","sortedCharacters","_toConsumableArray","sort","a","b","localeCompare","useEffect","filter","fetchCharacters","fetchCharactersByName","map","prevPage","pages","nextPage","MainTitle","Form","Input","Box","Icon","ImSearch","SearchForm","onSubmit","e","preventDefault","value","placeholder","onChange","addFilter","currentTarget","MainPage","characters","getCharacterById","characterById"],"sourceRoot":""}