{"version":3,"file":"static/js/391.26af3f78.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Title/Title.styled.js","components/Title/Title.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/CardList/CardList.styled.js","components/CharacterCard/CharacterCard.styled.js","components/CharacterCard/CharacterCard.jsx","components/CardList/CardList.jsx","pages/MainPage/MainPage.styled.js","components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.jsx","pages/MainPage/MainPage.jsx","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const Container = styled.div`\n  width: 100%;\n  padding: 92px 20px;\n  margin: 0 auto;\n  @media screen and (min-width: 1050px) {\n    width: 1050px;\n    padding: 0 15px;\n    margin: 0 auto;\n  }\n`;\n","import styled from \"styled-components\";\nexport const TitleImage = styled.img`\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto 32px auto;\n  @media screen and (min-width: 1050px) {\n    margin-bottom: 16px;\n  }\n`;\n","import { TitleImage } from \"./Title.styled\";\nconst titleImg = require(\"../../images/title.png\");\n\nexport const Title = () => {\n  return (\n    <>\n      <TitleImage src={titleImg} alt=\"Rick and Morty\" />\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\nimport { FaArrowCircleRight } from \"react-icons/fa\";\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n  color: rgba(46, 107, 3, 0.8);\n  &:hover {\n    color: rgb(46, 107, 3);\n    cursor: pointer;\n  }\n`;\nexport const PagBox = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 50px;\n`;\nexport const LeftArrow = styled(FaArrowCircleLeft)`\n  width: 50px;\n  height: 50px;\n`;\nexport const RightArrow = styled(FaArrowCircleRight)`\n  width: 50px;\n  height: 50px;\n`;\n","import { Button, PagBox, LeftArrow, RightArrow } from \"./Pagination.styled\";\nexport const NextPage = ({ loadFunction }) => {\n  return (\n    <Button type=\"button\" onClick={loadFunction}>\n      <RightArrow />\n    </Button>\n  );\n};\nexport const PreviousPage = ({ loadFunction }) => {\n  return (\n    <Button type=\"button\" onClick={loadFunction}>\n      <LeftArrow />\n    </Button>\n  );\n};\nexport const PaginationBox = ({ children }) => {\n  return <PagBox>{children}</PagBox>;\n};\n","import styled from \"styled-components\";\nexport const CharactersList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  gap: 32px;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 50px;\n  @media screen and (min-width: 540px) {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    gap: 20px;\n  }\n`;\nexport const BadResult = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 50px;\n  text-align: center;\n\n  @media screen and (min-width: 1050px) {\n    font-size: 60px;\n    margin-bottom: 30px;\n  }\n`;\nexport const BadImage = styled.img`\n  position: absolute;\n  opacity: 50%;\n`;\nexport const BadWrapper = styled.div`\n  position: relative;\n`;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nexport const Navigation = styled(NavLink)`\n  text-decoration: none;\n`;\nexport const CharacterItem = styled.li`\n  width: 100%;\n  @media screen and (max-width: 540px) {\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 540px) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n  @media screen and (min-width: 800px) {\n    flex-basis: calc((100% - 40px) / 3);\n  }\n  @media screen and (min-width: 1050px) {\n    flex-basis: calc((100% - 60px) / 4);\n  }\n  max-width: 390px;\n  background: #ffffff;\n  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12),\n    0px 2px 4px rgba(0, 0, 0, 0.14);\n  border-radius: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\nexport const Image = styled.img`\n  border-radius: 4px 4px 0 0;\n  max-height: 232px;\n  object-fit: cover;\n`;\nexport const CardBox = styled.div`\n  padding: 12px 16px;\n`;\nexport const CardTitle = styled.h2`\n  font-family: \"Roboto\";\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-bottom: 1px;\n`;\nexport const CardText = styled.p`\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n","import {\n  CharacterItem,\n  Image,\n  CardBox,\n  CardTitle,\n  CardText,\n  Navigation,\n} from \"./CharacterCard.styled\";\nexport const CharacterCard = ({ character }) => {\n  return (\n    <CharacterItem>\n      <Navigation to={`${character.id}`} state={{ from: \"/\" }}>\n        <Image src={character.image} alt={character.name} />\n        <CardBox>\n          <CardTitle>{character.name}</CardTitle>\n          <CardText>{character.species}</CardText>\n        </CardBox>\n      </Navigation>\n    </CharacterItem>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { NextPage, PreviousPage } from \"../Pagination/Pagination\";\nimport { getCharacters, getFilter, getPage } from \"../../redux/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchCharacters, fetchCharactersByName } from \"../../redux/operations\";\nimport { nextPage, prevPage } from \"../../redux/charactersSlice\";\nimport {\n  CharactersList,\n  BadResult,\n  BadImage,\n  BadWrapper,\n} from \"./CardList.styled\";\nimport { CharacterCard } from \"../CharacterCard/CharacterCard\";\nimport { PaginationBox } from \"../Pagination/Pagination\";\nconst badImg = require(\"../../images/ready.png\");\nexport const CardList = () => {\n  const page = useSelector(getPage);\n  const nextPageFunc = () => {\n    dispatch(nextPage());\n  };\n  const prevPageFunc = () => {\n    dispatch(prevPage());\n  };\n  const dispatch = useDispatch();\n  const { items, error, maxPage } = useSelector(getCharacters);\n\n  const query = useSelector(getFilter);\n  const sortedCharacters = [...items].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  useEffect(() => {\n    if (query.filter === \"\") {\n      dispatch(fetchCharacters(page.page));\n    }\n    if (query.filter !== \"\") {\n      dispatch(fetchCharactersByName(query.filter));\n    }\n  }, [dispatch, page, query.filter]);\n  return (\n    <>\n      {error && (\n        <BadWrapper>\n          <BadResult>No matches</BadResult>\n          <BadImage src={badImg} alt=\"no matches\" />\n        </BadWrapper>\n      )}\n      {!error && (\n        <>\n          <CharactersList>\n            {sortedCharacters.map((character) => {\n              return <CharacterCard character={character} key={character.id} />;\n            })}\n          </CharactersList>\n\n          {maxPage !== 1 && (\n            <PaginationBox>\n              {page.page !== 1 && query.filter === \"\" && (\n                <PreviousPage loadFunction={prevPageFunc} />\n              )}\n              {page.page < maxPage.pages && query.filter === \"\" && (\n                <NextPage loadFunction={nextPageFunc} />\n              )}\n            </PaginationBox>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const MainTitle = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import styled from \"styled-components\";\nimport { ImSearch } from \"react-icons/im\";\n\nexport const Form = styled.form`\n  width: 100%;\n  margin-bottom: 32px;\n  @media screen and (min-width: 1050px) {\n    margin-bottom: 61px;\n  }\n`;\nexport const Input = styled.input`\n  width: 100%;\n  padding: 16px 48px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  /* width: 100%; */\n  height: 100%;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px;\n`;\nexport const Box = styled.div`\n  position: relative;\n`;\nexport const Icon = styled(ImSearch)`\n  width: 17px;\n  height: 17px;\n  color: rgba(0, 0, 0, 0.54); ;\n`;\n","import { Form, Input, Button, Box, Icon } from \"./FilterForm.styled\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { addFilter } from \"../../redux/charactersSlice\";\n\nexport const SearchForm = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = (e) => {\n    dispatch(addFilter(e.currentTarget.value));\n  };\n  const formSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Form onSubmit={formSubmit}>\n      <Box>\n        <Input\n          type=\"text\"\n          value={filter.filter}\n          name=\"query\"\n          placeholder=\"Filter by name...\"\n          onChange={changeFilter}\n        />\n        <Button type=\"submit\">\n          <Icon />\n        </Button>\n      </Box>\n    </Form>\n  );\n};\n","import { Container } from \"../../components/Container/Container.styled\";\nimport { Title } from \"../../components/Title/Title\";\nimport { CardList } from \"../../components/CardList/CardList\";\nimport { MainTitle } from \"./MainPage.styled\";\nimport { SearchForm } from \"../../components/FilterForm/FilterForm\";\nexport default function MainPage() {\n  return (\n    <Container>\n      <MainTitle>Rick and Morty</MainTitle>\n      <Title />\n      <SearchForm />\n      <CardList />\n    </Container>\n  );\n}\n","export const getCharacters = (state) => state.characters;\nexport const getFilter = (state) => state.filter;\nexport const getPage = (state) => state.page;\nexport const getCharacterById = (state) => state.characterById;\n"],"names":["Container","styled","TitleImage","titleImg","require","Title","src","alt","Button","PagBox","LeftArrow","FaArrowCircleLeft","RightArrow","FaArrowCircleRight","NextPage","loadFunction","type","onClick","PreviousPage","PaginationBox","children","CharactersList","BadResult","BadImage","BadWrapper","Navigation","NavLink","CharacterItem","Image","CardBox","CardTitle","CardText","CharacterCard","character","to","id","state","from","image","name","species","badImg","CardList","page","useSelector","getPage","dispatch","useDispatch","getCharacters","items","error","maxPage","query","getFilter","sortedCharacters","sort","a","b","localeCompare","useEffect","filter","fetchCharacters","fetchCharactersByName","map","prevPage","pages","nextPage","MainTitle","Form","Input","Box","Icon","ImSearch","SearchForm","onSubmit","e","preventDefault","value","placeholder","onChange","addFilter","currentTarget","MainPage","characters","getCharacterById","characterById"],"sourceRoot":""}